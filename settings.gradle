/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.9/userguide/multi_project_builds.html in the Gradle documentation.
 */

pluginManagement {
    repositories {
        gradlePluginPortal()
        maven {
            url = uri("https://oss.sonatype.org/content/repositories/snapshots")
        }
    }
}

plugins {
    // Apply the foojay-resolver plugin to allow automatic download of JDKs
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
}

rootProject.name = 'PrintScript'

include('cli-app')
include('common')
include('environment')
include('formatter')
include('interpreter')
include('lexer')
include('linter')
include('nodes')
include('peekable-iterator')
include('semantic')
include('syntactic')
include('tokens')

// Global formatting and linting tasks
gradle.rootProject {
    tasks.register('formatAll') {
        group = 'formatting'
        description = 'Formats all Java code in all subprojects'
        dependsOn subprojects.collect { it.tasks.matching { it.name == 'spotlessApply' } }
    }

    tasks.register('lintAll') {
        group = 'verification'
        description = 'Runs all linting checks in all subprojects'
        dependsOn subprojects.collect { it.tasks.matching { it.name == 'checkstyleMain' } }
        dependsOn subprojects.collect { it.tasks.matching { it.name == 'spotbugsMain' } }
        dependsOn subprojects.collect { it.tasks.matching { it.name == 'pmdMain' } }
    }

    tasks.register('codeQualityAll') {
        group = 'verification'
        description = 'Runs all code quality checks including formatting'
        dependsOn subprojects.collect { it.tasks.matching { it.name == 'spotlessCheck' } }
        dependsOn lintAll
    }

    tasks.register('quickCheck') {
        group = 'verification'
        description = 'Runs quick code quality checks (formatting only)'
        dependsOn subprojects.collect { it.tasks.matching { it.name == 'spotlessCheck' } }
    }
}
include 'reflections'
include 'interpreter-app'